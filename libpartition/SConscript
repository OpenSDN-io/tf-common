# -*- mode: python; -*-

#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

import os

Import('BuildEnv')
PartEnv = BuildEnv.Clone()

setup_sources = [
    'setup.py',
    'MANIFEST.in',
    'requirements.txt'
]

setup_sources_rules = []
for file in setup_sources:
    setup_sources_rules.append(
        PartEnv.Install(Dir("."), '#src/contrail-common/libpartition/' + file))

local_sources = [
    '__init__.py',
    'libpartition.py',
    'consistent_hash.py',
]

local_sources_rules = []
for file in local_sources:
    local_sources_rules.append(PartEnv.Install(Dir("libpartition"), file))

sdist_depends = [setup_sources_rules, local_sources_rules]

cd_cmd = 'cd ' + Dir('.').path + ' && '
sdist_gen = PartEnv.Command(
    'dist/libpartition-%s.tar.gz' % PartEnv.GetPyVersion(),
    'setup.py',
    cd_cmd + 'python3 setup.py sdist')
# install everything before building distribution
PartEnv.Depends(sdist_gen, sdist_depends)

def SymLink(target, source, env):
    os.symlink(os.path.abspath(str(source[0])), os.path.abspath(str(target[0])))

if 'install' in BUILD_TARGETS:
    install_cmd = PartEnv.Command(None,
                                  'setup.py',
                                  cd_cmd + 'python3 setup.py install %s' %
                                  PartEnv['PYTHON_INSTALL_OPT'])
    PartEnv.Depends(install_cmd, sdist_depends)
    PartEnv.Alias('install', install_cmd)

    install_root = GetOption('install_root')
    if install_root is None:
        install_root = ''
    PartEnv.Alias(
        'install',
        PartEnv.Install(
            install_root + '/opt/opensdn/pip/libpartition/',
            Entry('#src/contrail-common/libpartition/requirements.txt')))

PartEnv['LIBPARTITION_PKG'] = sdist_gen

PartEnv.Default(sdist_gen)
PartEnv.Alias("contrail:libpartition", sdist_gen)
